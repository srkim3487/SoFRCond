% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SoFR_CAR_spa_fun.R
\name{SoFR_CAR_spa_fun}
\alias{SoFR_CAR_spa_fun}
\title{CAR model with functional covariate}
\usage{
SoFR_CAR_spa_fun(
  t,
  X,
  y,
  nbd_index,
  rhoHat,
  betaHat,
  sigma2Hat,
  sigma2_tol = 1e-08,
  rho_tol = 1e-08,
  beta_tol = 1e-06
)
}
\arguments{
\item{t}{A T-dimensional vector of containing densely time grid points, where the functions are evaluated.}

\item{X}{An n by T matrix of functional covariates. Each row represents one observed functional covariate.}

\item{y}{An n-dimensional vector of response variable.}

\item{nbd_index}{A list of length n, which contains the neighborhood structure (of class nb).}

\item{rhoHat}{A numeric value specifying an initial of \eqn{\rho}.}

\item{betaHat}{A T-dimensional vector for initial values for \eqn{\beta}.}

\item{sigma2Hat}{A numeric value specifying an initial of \eqn{\sigma^2}.}

\item{sigma2_tol}{Convergence tolerance for \eqn{\hat{\sigma}^2}, with a default of 1e-8.}

\item{rho_tol}{Convergence tolerance for \eqn{\hat{\rho}}, with a default of 1e-8.}

\item{beta_tol}{Convergence tolerance for \eqn{\hat{\beta}}, with a default of 1e-6.}
}
\value{
A list with the following elements:
\describe{
   \itemize{
      \item \code{iter}: The number of iterations.
      \item \code{p}: The selected truncation level.
      \item \code{sigma2Hat}: The estimated value of \eqn{\sigma_i^2}.
      \item \code{rhoHat}: The estimated value of \eqn{\rho}.
      \item \code{betaHat}: A T-dimensional vector of estimated parameter function \eqn{\hat{\beta}}.
      \item \code{pval_rho}: P-value for testing the null hypothesis \eqn{\rho=0}.
      \item \code{pval_beta}: P-value for testing the null hypothesis \eqn{\beta=0}.
   }
}
}
\description{
Performs estimation algorithm based on spectral decomposition of the spatially adjusted operator.
}
\examples{

library(SpatialSoFR)

# Load example data included in the package
data(CAR_data)
t <- CAR_data$t; X <- CAR_data$X; y <- CAR_data$y; nbd_index <- CAR_data$nbd_index
num_neighbors <- sapply(nbd_index, length)
res_iid <- SoFR_conti_iid_fun(t, X, y, num_neighbors)
betaHat <- res_iid$betaHat

res_spa <- SoFR_CAR_spa_fun(t, X, y, nbd_index, rhoHat=0.1, betaHat, sigma2Hat=1)

# Example: plot the estimated parameter function
plot(t, res_spa$betaHat, type = 'l')

}
\seealso{
\code{\link{SoFR_conti_iid_fun}}
\code{\link{SoFR_binary_iid_fun}}
\code{\link{SoFR_binary_spa_fun}}
}

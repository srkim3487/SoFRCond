% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SoFR_binary_spa_fun.R
\name{SoFR_binary_spa_fun}
\alias{SoFR_binary_spa_fun}
\title{Binary conditional model with functional covariate under spatial dependence}
\usage{
SoFR_binary_spa_fun(
  t,
  X,
  y,
  nbd_index,
  etaHat,
  alphaHat,
  betaHat,
  eta_tol = 1e-08,
  alpha_tol = 1e-08,
  beta_tol = 1e-06
)
}
\arguments{
\item{t}{A T-dimensional vector of containing densely time grid points, where the functions are evaluated.}

\item{X}{An n by T matrix of functional covariates. Each row represents one observed functional covariate.}

\item{y}{An n-dimensional vector of response variable.}

\item{nbd_index}{A list of length n, which contains the neighborhood structure (of class nb).}

\item{alphaHat}{A numeric value specifying the initial values of \eqn{\alpha}.}

\item{betaHat}{A T-dimensional vector specifying the initial value of \eqn{\beta}.}

\item{eta_tol}{Convergence tolerance for \eqn{\hat{\eta}}, with a default of 1e-8.}

\item{alpha_tol}{Convergence tolerance for \eqn{\hat{\alpha}}, with a default of 1e-8.}

\item{beta_tol}{Convergence tolerance for \eqn{\hat{\beta}}, with a default of 1e-6.}

\item{etaaHat}{A numeric value specifying the initial values of \eqn{\eta}.}
}
\value{
A list with the following elements:
\describe{
   \itemize{
      \item \code{iter_spa}: The number of outer iterations for whole.
      \item \code{iter}: The number of inner iterations for estimation of \eqn{\beta}.
      \item \code{p}: The selected truncation level.
      \item \code{etaHat}: The estimated value of \eqn{\eta}.
      \item \code{alphaHat}: The estimated value of \eqn{\alpha}.
      \item \code{betaHat}: A T-dimensional vector of estimated parameter function \eqn{\hat{\beta}}.
      \item \code{pval_eta}: P-value for testing the null hypothesis \eqn{\eta=0}.
      \item \code{pval_beta}: P-value for testing the null hypothesis \eqn{\beta=0}.
   }
}
}
\description{
Performs estimation using an iteratively reweighted least squares (IRLS) algorithm 
with spectral decomposition based on the spatially adjusted working covariate.
}
\examples{

library(SpatialSoFR)

# Load example data included in the package
data(binary_data)
t <- binary_data$t; X <- binary_data$X; y <- binary_data$y; nbd_index <- binary_data$nbd_index
betaHat <- rep(0, length(t))
res_iid <- SoFR_binary_iid_fun(t, X, y, nbd_index = NULL, alphaHat = 0, betaHat = betaHat)
betaHat <- res_iid$betaHat

res_spa <- SoFR_binary_spa_fun(t, X, y, nbd_index, etaHat = 0.3, alphaHat = 0, betaHat = betaHat)

# Example: plot the estimated parameter function
plot(t, res_spa$betaHat, type = 'l')

}
\seealso{
\code{\link{SoFR_conti_iid_fun}}
\code{\link{SoFR_CAR_spa_fun}}
\code{\link{SoFR_binary_iid_fun}}
}
